apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion versions.compileSdkVersion

    defaultConfig {
        applicationId "com.memtrip.eosreachreach"
        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode versions.versionCode
        versionName versions.versionName

        minSdkVersion versions.minSdkVersion
        targetSdkVersion versions.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    flavorDimensions "api"
    productFlavors {
        stub {
            dimension "api"
        }
        dev {
            dimension "api"
        }
        prod {
            dimension "api"
        }
    }
    androidExtensions {
        experimental = true
    }
}

dependencies {

    implementation project(':brand')

    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

    /* Support libraries */
    implementation 'androidx.constraintlayout:constraintlayout:2.0.0-alpha2'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0-rc01'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.0.0-rc02'

    /* Billing */
    implementation 'com.android.billingclient:billing:1.1'

    /* eos-jvm */
    implementation "com.memtrip.eos-jvm:eos-chain-actions:1.0.0-alpha01"

    /* okhttp */
    implementation 'com.squareup.okhttp3:logging-interceptor:3.10.0'

    /* moshi */
    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.6.0'

    /* MVI */
    implementation 'com.memtrip.mxandroid:mxandroid:1.0.1'

    /*  Dagger */
    implementation "com.google.dagger:dagger:$versions.daggerVersion"
    kapt "com.google.dagger:dagger-compiler:$versions.daggerVersion"
    implementation "com.google.dagger:dagger-android:$versions.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$versions.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$versions.daggerVersion"

    /* rx */
    implementation 'io.reactivex:rxkotlin:1.0.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'

    implementation 'com.jakewharton.rxbinding2:rxbinding-kotlin:2.1.1'
    implementation 'com.jakewharton.rxbinding2:rxbinding-support-v4-kotlin:2.1.1'

    /* room */
    implementation 'androidx.room:room-runtime:2.0.0-rc01'
    kapt 'androidx.room:room-compiler:2.0.0-rc01'

    /* fresco */
    implementation 'com.facebook.fresco:fresco:1.10.0'

    /* Java8 date backport */
    implementation 'com.jakewharton.threetenabp:threetenabp:1.1.0'

    /* leak canary */
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.6.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    /* multidex */
    implementation 'androidx.multidex:multidex:2.0.0'

    /* spek */
    testImplementation 'org.jetbrains.spek:spek-api:1.1.5'
    testImplementation 'org.jetbrains.spek:spek-junit-platform-engine:1.1.5'

    /* junit */
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.junit.platform:junit-platform-runner:1.0.1'

    /* mockito */
    testImplementation 'org.mockito:mockito-core:2.18.3'
    testImplementation 'com.nhaarman:mockito-kotlin:1.5.0'

    /* assertj */
    testImplementation 'org.assertj:assertj-core:3.10.0'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
}
